create table t1(id int);
insert into t1 values (1);

# flush log
flush logs;
insert into t1 values (2);
flush logs;
insert into t1 values (3);

# purge log
--replace_column 2 # 3 #
show consensus logs;
#purge consensus_log before 100;
call dbms_consensus.purge_log(100);
flush logs;
insert into t1 values (4);
flush logs;
insert into t1 values (5);
flush logs;
insert into t1 values (6);
flush logs;
insert into t1 values (7);
insert into t1 values (8);
# add a learner (sync log will fail)
let $learner_base_port = query_get_value("select $MYPORT_1+50 as c1", c1, 1);
--source include/start_new_learner.inc
--let $learner1_pid_file= $learner_pid_file
#eval add consensus_learner $learner_cluster_info;
--replace_result $learner_cluster_info learner_cluster_info
eval call dbms_consensus.add_learner($learner_cluster_info);
insert into t1 values (9);
insert into t1 values (10);
insert into t1 values (11);
insert into t1 values (12);
# test drop learner deadlock bug #11443498
select ROLE from information_schema.alisql_cluster_global where role='LEARNER';

#eval drop consensus_learner $learner_cluster_info;
--disable_query_log
eval call dbms_consensus.drop_learner($learner_cluster_info);
--enable_query_log
drop table t1;
select ROLE from information_schema.alisql_cluster_global where role='LEARNER';

# cleanup
--source include/stop_new_learner.inc

