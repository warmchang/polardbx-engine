--source include/paxos.inc

#change consensus_leader to 3;
--replace_result $PAXOS_PORT_3 PAXOS_PORT_3
eval call dbms_consensus.change_leader("127.0.0.1:$PAXOS_PORT_3");
--connect (conn3,127.0.0.1,root,,mysql,$MYPORT_3)
let $wait_condition= select count(*)=1 from information_schema.alisql_cluster_local where role='leader';
--source include/wait_condition.inc
select server_id, role, instance_type from information_schema.alisql_cluster_local;

start slave;
stop slave;

--error ER_CONSENSUS_LOG_TYPE_NODE
#add consensus_learner "127.0.0.1:20001";
call dbms_consensus.add_learner("127.0.0.1:20001");
--error ER_CONSENSUS_LOG_TYPE_NODE
#drop consensus_learner "127.0.0.1:20001";
call dbms_consensus.drop_learner("127.0.0.1:20001");
--error ER_CONSENSUS_LOG_TYPE_NODE
#add consensus_follower "127.0.0.1:20001";
call dbms_consensus.add_follower("127.0.0.1:20001");
--error ER_CONSENSUS_LOG_TYPE_NODE
#drop consensus_follower "127.0.0.1:20001";
call dbms_consensus.downgrade_follower("127.0.0.1:20001");
#call dbms_consensus.drop_learner("127.0.0.1:20001");
--error ER_CONSENSUS_LOG_TYPE_NODE
#change consensus_follower "127.0.0.1:20001" to consensus_learner;
call dbms_consensus.downgrade_follower("127.0.0.1:20001");
--error ER_CONSENSUS_LOG_TYPE_NODE
#change consensus_learner "127.0.0.1:20001" to consensus_follower;
call dbms_consensus.upgrade_learner("127.0.0.1:20001");
--error ER_CONSENSUS_LOG_TYPE_NODE
#change consensus_node "127.0.0.1:20001" consensus_force_sync true consensus_election_weight 9;
call dbms_consensus.configure_follower("127.0.0.1:20001", 9, 1);
--error ER_CONSENSUS_LOG_TYPE_NODE
#change consensus_node "127.0.0.1:20001" consensus_learner_source "127.0.0.1:20002";
call dbms_consensus.configure_learner("127.0.0.1:20001", "127.0.0.1:20002");
--error ER_CONSENSUS_LOG_TYPE_NODE
start xpaxos_replication;
--error ER_CONSENSUS_LOG_TYPE_NODE
stop xpaxos_replication;
--error ER_CONSENSUS_LOG_TYPE_NODE
change master to master_host='127.0.0.1';
set force_revise=ON;
--error ER_CONSENSUS_SERVER_NOT_READY
start xpaxos_replication;
--error ER_CONSENSUS_SERVER_NOT_READY
stop xpaxos_replication;
set force_revise=OFF;

# test force_revise
--error ER_CONSENSUS_LOG_TYPE_NODE
#add consensus_learner "127.0.0.1:20001";
call dbms_consensus.add_learner("127.0.0.1:20001");
set force_revise=ON;
#add consensus_learner "127.0.0.1:20001";
call dbms_consensus.add_learner("127.0.0.1:20001");
set force_revise=OFF;
--error ER_CONSENSUS_LOG_TYPE_NODE
#drop consensus_learner "127.0.0.1:20001";
call dbms_consensus.drop_learner("127.0.0.1:20001");
set force_revise=ON;
#drop consensus_learner "127.0.0.1:20001";
call dbms_consensus.drop_learner("127.0.0.1:20001");
set force_revise=OFF;

# test binlog dump
--let $master_binlog= query_get_value(SHOW MASTER STATUS, File, 1)
--let $master_pos= query_get_value(SHOW MASTER STATUS, Position, 1)
--exec $MYSQL_BINLOG --read-from-remote-master=BINLOG-DUMP-NON-GTIDS --user=root --host=127.0.0.1 --port=$MYPORT_3 --start-position=$master_pos $master_binlog | wc -l
--error 1
--exec $MYSQL_BINLOG --read-from-remote-master=BINLOG-DUMP-GTIDS --user=root --host=127.0.0.1 --port=$MYPORT_3 --start-position=$master_pos $master_binlog

#change consensus_leader to 1;
--replace_result $PAXOS_PORT_1 PAXOS_PORT_1
eval call dbms_consensus.change_leader("127.0.0.1:$PAXOS_PORT_1");
--connection default
--enable_reconnect
# wait until catchup and become leader
let $wait_condition= select SERVER_READY_FOR_RW='Yes' from information_schema.alisql_cluster_local where role='leader';
--source include/wait_condition.inc
